{"version":3,"sources":["components/AddContact.js","components/EditContact.js","components/Home.js","components/Navbar.js","App.js","reportWebVitals.js","redux/reducers/contactReducer.js","index.js"],"names":["AddContact","nextId","useState","name","setName","email","setEmail","number","setNumber","contacts","useSelector","state","dispatch","useDispatch","history","useHistory","className","type","placeholder","value","onChange","e","target","onClick","preventDefault","checkEmail","find","contact","checkNumber","parseInt","toast","warning","error","data","id","length","payload","success","push","EditContact","useParams","contactExist","useEffect","to","class","role","Home","scope","map","deleteContact","Navbar","App","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","contactReducer","action","updateState","filterContact","filter","store","createStore","composeWithDevTools","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3178d726.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { toast } from \"react-toastify\";\r\nimport nextId from \"react-id-generator\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nfunction AddContact() {\r\n  let htmlId = nextId();\r\n\r\n  const [name, setName] = useState();\r\n  const [email, setEmail] = useState();\r\n  const [number, setNumber] = useState();\r\n\r\n  const contacts = useSelector((state) => state);\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n\r\n  const handleChange = (e) => {\r\n    e.preventDefault();\r\n    const checkEmail = contacts.find(\r\n      (contact) => contact.email === email && contact\r\n    );\r\n    const checkNumber = contacts.find(\r\n      (contact) => contact.number === parseInt(number)\r\n    );\r\n\r\n    if (!name || !email || !number) {\r\n      return toast.warning(\"Please fill all required fields\");\r\n    }\r\n    if (checkEmail) {\r\n      return toast.error(\"This email already exists!\");\r\n    }\r\n    if (checkNumber) {\r\n      return toast.error(\"This number already exists!\");\r\n    }\r\n\r\n    const data = {\r\n      id: contacts[contacts.length - 1].id + 1,\r\n      name,\r\n      email,\r\n      number,\r\n    };\r\n    dispatch({\r\n      type: \"ADD_CONTACT\",\r\n      payload: data,\r\n    });\r\n    toast.success(\"Student added succesfully\");\r\n    history.push(\"/\");\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"row\">\r\n        <h1 className=\"display-3 text-center\">Add Contact</h1>\r\n        <div className=\"col-md-6 shadow mx-auto p-5\">\r\n          <form>\r\n            <div className=\"input-group\">\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"Name\"\r\n                className=\"form-control\"\r\n                value={name}\r\n                onChange={(e) => {\r\n                  setName(e.target.value);\r\n                }}\r\n              />\r\n            </div>\r\n            <div className=\"input-group\">\r\n              <input\r\n                type=\"email\"\r\n                placeholder=\"Email\"\r\n                className=\"form-control my-3\"\r\n                value={email}\r\n                onChange={(e) => {\r\n                  setEmail(e.target.value);\r\n                }}\r\n              />\r\n            </div>\r\n            <div className=\"input-group\">\r\n              <input\r\n                type=\"number\"\r\n                placeholder=\"Number\"\r\n                className=\"form-control\"\r\n                value={number}\r\n                onChange={(e) => {\r\n                  setNumber(e.target.value);\r\n                }}\r\n              />\r\n            </div>\r\n            <div className=\"input-group\">\r\n              <input\r\n                type=\"submit\"\r\n                value=\"Add Student\"\r\n                className=\"btn btn-block btn-dark mt-3\"\r\n                onClick={handleChange}\r\n              />\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AddContact;\r\n","import React, { useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link, useHistory, useParams } from 'react-router-dom'\r\nimport { toast } from 'react-toastify';\r\n\r\nfunction EditContact() {\r\n    const { id } = useParams();\r\n\r\n    const [name, setName] = useState();\r\n    const [email, setEmail] = useState();\r\n    const [number, setNumber] = useState();\r\n\r\n    const contacts = useSelector(state => state);\r\n    const contactExist = contacts.find(contact => contact.id === parseInt(id));\r\n\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n\r\n\r\n    useEffect(() => {\r\n        if (contactExist) {\r\n            setName(contactExist.name);\r\n            setEmail(contactExist.email);\r\n            setNumber(contactExist.number);\r\n        }\r\n    }, [contactExist])\r\n\r\n    const handleChange = (e) => {\r\n        e.preventDefault();\r\n\r\n        const checkEmail = contacts.find(contact => contact.id !== parseInt(id) && contact.email === email);\r\n        const checkNumber = contacts.find(contact => contact.id !== parseInt(id) && contact.number === parseInt(number));\r\n\r\n        if (!name || !email || !number) {\r\n            return toast.warning(\"Please fill all required fields\")\r\n        }\r\n        if (checkEmail) {\r\n            return toast.error(\"This email already exists!\")\r\n        }\r\n        if (checkNumber) {\r\n            return toast.error(\"This number already exists!\")\r\n        }\r\n\r\n        const data = {\r\n            id: parseInt(id),\r\n            name,\r\n            email,\r\n            number,\r\n        }\r\n        dispatch({\r\n            type: \"UPDATE_CONTACT\",\r\n            payload: data,\r\n        })\r\n        toast.success(\"Student updated succesfully\");\r\n        history.push(\"/\");\r\n    }\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            {contactExist ? (\r\n                <div className=\"row\">\r\n                    <h1 className=\"display-3 text-center\">\r\n                        Edit Student {id}\r\n                    </h1>\r\n                    <div className=\"col-md-6 shadow mx-auto p-5\">\r\n                        <form>\r\n                            <div className=\"input-group\">\r\n                                <input type=\"text\" placeholder=\"Name\" className=\"form-control\" value={name} onChange={e => setName(e.target.value)} />\r\n                            </div>\r\n                            <div className=\"input-group\">\r\n                                <input type=\"email\" placeholder=\"Email\" className=\"form-control my-3\" value={email} onChange={e => setEmail(e.target.value)} />\r\n                            </div>\r\n                            <div className=\"input-group\">\r\n                                <input type=\"number\" placeholder=\"Number\" className=\"form-control\" value={number} onChange={e => setNumber(e.target.value)} />\r\n                            </div>\r\n                            <div className=\"input-group\">\r\n                                <input type=\"submit\" value=\"Update Student\" className=\"btn btn-block btn-dark mt-3\" onClick={handleChange} />\r\n                                <Link to=\"/\" className=\"btn btn-danger mt-3\">\r\n                                    Cancel\r\n                                </Link>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            ) : (\r\n                <div class=\"alert alert-danger\" role=\"alert\">\r\n                    <h1>Student with id {id} does not exist!!!</h1>\r\n                </div>\r\n            )}\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default EditContact\r\n","import React from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nfunction Home() {\r\n  const contacts = useSelector((state) => state);\r\n  const dispatch = useDispatch();\r\n\r\n  const deleteContact = (id) => {\r\n    dispatch({\r\n      type: \"DELETE_CONTACT\",\r\n      payload: id,\r\n    });\r\n    toast.success(\"Contact deleted succesfully\");\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"row\">\r\n        <div className=\"col-md-12 my-5 d-flex justify-content-end\">\r\n          <Link to=\"/add\" className=\"btn btn-outline-dark\">\r\n            Add Contact\r\n          </Link>\r\n        </div>\r\n        <div className=\"col-md-10 mx-auto\">\r\n          <table className=\"table table-hover\">\r\n            <thead className=\"text-white bg-dark text-center\">\r\n              <tr>\r\n                <th scope=\"col\">#</th>\r\n                <th scope=\"col\">Name</th>\r\n                <th scope=\"col\">Email</th>\r\n                <th scope=\"col\">Number</th>\r\n                <th scope=\"col\">Action</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody className=\"text-center\">\r\n              {contacts.map((contact, id) => (\r\n                <tr key={id}>\r\n                  <td>{id + 1}</td>\r\n                  <td>{contact.name}</td>\r\n                  <td>{contact.email}</td>\r\n                  <td>{contact.number}</td>\r\n                  <td>\r\n                    <Link\r\n                      to={`/edit/${contact.id}`}\r\n                      className=\"btn btn-sm btn-primary\"\r\n                    >\r\n                      Edit\r\n                    </Link>\r\n                    <button\r\n                      type=\"button\"\r\n                      className=\"btn btn-sm btn-danger mx-2\"\r\n                      onClick={() => deleteContact(contact.id)}\r\n                    >\r\n                      Delete\r\n                    </button>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nfunction Navbar() {\r\n    return (\r\n        <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark py-2\">\r\n            <Link to=\"/\" className=\"navbar-brand ml-5\">\r\n                Students List\r\n            </Link>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default Navbar\r\n","import { Route, Switch } from 'react-router-dom';\nimport { ToastContainer } from 'react-toastify';\nimport './App.css';\nimport AddContact from './components/AddContact';\nimport EditContact from './components/EditContact';\nimport Home from './components/Home';\nimport Navbar from './components/Navbar';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <ToastContainer />\n      <Navbar />\n      <Switch>\n        <Route exact path=\"/\">\n          <Home />\n        </Route>\n        <Route path=\"/add\">\n          <AddContact />\n        </Route>\n        <Route path=\"/edit/:id\">\n          <EditContact />\n        </Route>\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","const initialState = [\r\n  {\r\n    id: 0,\r\n    name: \"Sherzod Kenjaev\",\r\n    email: \"kenjaevsherzod@gmail.com\",\r\n    number: 456456,\r\n  },\r\n\r\n  {\r\n    id: 1,\r\n    name: \"Ali Bekov\",\r\n    email: \"alibek@gmail.com\",\r\n    number: 123123,\r\n  },\r\n];\r\n\r\nconst contactReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case \"ADD_CONTACT\":\r\n      state = [...state, action.payload];\r\n      return state;\r\n\r\n    case \"UPDATE_CONTACT\":\r\n      const updateState = state.map((contact) =>\r\n        contact.id === action.payload.id ? action.payload : contact\r\n      );\r\n      state = updateState;\r\n      return state;\r\n\r\n    case \"DELETE_CONTACT\":\r\n      const filterContact = state.filter(\r\n        (contact) => contact.id !== action.payload && contact\r\n      );\r\n      state = filterContact;\r\n      return state;\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default contactReducer;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport { createStore } from \"redux\";\nimport contactReducer from \"./redux/reducers/contactReducer\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport { Provider } from \"react-redux\";\n\nconst store = createStore(contactReducer, composeWithDevTools());\n\nReactDOM.render(\n  <Provider store={store}>\n    <Router>\n      <App />\n    </Router>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}